name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.changes.outputs.frontend }}
      backend: ${{ steps.changes.outputs.backend }}
      mcp-server: ${{ steps.changes.outputs.mcp-server }}
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          frontend:
            - 'src/**'
            - 'public/**'
            - 'index.html'
            - 'package.json'
            - 'package-lock.json'
            - 'vite.config.ts'
            - 'vitest.config.ts'
            - 'tsconfig.json'
            - 'tsconfig.node.json'
            - 'tailwind.config.js'
            - 'postcss.config.js'
          backend:
            - 'src-tauri/**'
          mcp-server:
            - 'mcp-server/**'

  lint-frontend:
    name: Lint Frontend
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.frontend == 'true'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npm run lint
      continue-on-error: true
    
    - name: Run TypeScript check
      run: npm run typecheck
      continue-on-error: true

  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.frontend == 'true'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test

  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.backend == 'true'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          src-tauri/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check formatting
      run: cargo fmt --all -- --check
      working-directory: src-tauri
    
    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
      working-directory: src-tauri
    
    - name: Run tests
      run: cargo test --verbose
      working-directory: src-tauri

  test-mcp-server:
    name: Test MCP Server
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.mcp-server == 'true'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: mcp-server/package-lock.json
    
    - name: Install dependencies
      run: npm ci
      working-directory: mcp-server
    
    - name: Run tests
      run: npm test
      working-directory: mcp-server

  build-check:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend, test-mcp-server]
    if: always() && (needs.test-frontend.result == 'success' || needs.test-frontend.result == 'skipped') && (needs.test-backend.result == 'success' || needs.test-backend.result == 'skipped') && (needs.test-mcp-server.result == 'success' || needs.test-mcp-server.result == 'skipped')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libwebkit2gtk-4.0-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
    
    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          src-tauri/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install frontend dependencies
      run: npm ci
    
    - name: Install MCP server dependencies
      run: npm ci
      working-directory: mcp-server
    
    - name: Build MCP server
      run: npm run build
      working-directory: mcp-server
    
    - name: Build frontend
      run: npm run build
    
    - name: Build Tauri app (check only)
      run: npm run tauri build -- --no-bundle
      env:
        TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}